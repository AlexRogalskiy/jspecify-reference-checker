#!/bin/bash
# Initializes the JSpecify reference checker project by downloading required
# sibling projects.
#
# USAGE
#
#   initialize-project
#
# ENVIRONMENT VARIABLES
#
# Set SHALLOW=1 to clone sibling projects at depth 1.
#
# Set FORK to the GitHub organization that holds your fork of
# jspecify/checker-framework, jspecify/jspecify, or jspecify/jdk.
#
# For example, FORK=myorg means this script tries to clone the following before
# falling back to the JSpecify repos:
#
# git@github:myorg/checker-framework.git
# git@github:myorg/jspecify.git
# git@github:myorg/jdk.git


set -eu

run() {
  printf '%q ' "$@"
  echo
  "$@"
}

git_clone() {
  local repo="$1"
  shift

  if [[ -d "../${repo}" ]]; then
    return
  fi

  local git=(git clone)
  if (( "${SHALLOW:-0}" )); then
    git+=(--depth 1 --single-branch)
  fi
  git+=("$@")

  if [[ -n "${FORK:-}" ]]; then
    if run "${git[@]}" "git@github.com:${FORK}/${repo}.git" "../${repo}"; then
      return
    fi
  fi
  run "${git[@]}" "https://github.com/jspecify/${repo}.git" "../${repo}"
}

# We test using some modified samples in a different branch of the jspecify
# repo, so we check out that branch.
git_clone jspecify --branch samples-google-prototype

git_clone jdk --depth 1 --single-branch

git_clone checker-framework
